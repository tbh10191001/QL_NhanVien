# Form implementation generated from reading ui file 'dialog_CreateAccount1.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import traceback
from tkinter import messagebox

import pyodbc
from PyQt6 import QtCore, QtGui, QtWidgets
import re
from tkinter import *

class Ui_MainWindow(object):
    id = ""

    def init(self, id=''):
        self.id = id

    def set_id(self, id):
        self.id = id;

    def get_id(self):
        return self.id;
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(350, 190)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 10, 351, 20))
        self.label.setObjectName("label")
        self.formLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.formLayoutWidget.setGeometry(QtCore.QRect(10, 40, 331, 91))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.label_2 = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_2)
        self.username = QtWidgets.QLineEdit(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.username.setFont(font)
        self.username.setObjectName("username")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.username)
        self.label_3 = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_3)
        self.password = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.password.setObjectName("password")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.password)
        self.label_4 = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_4)
        self.roleCbb = QtWidgets.QComboBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.roleCbb.setFont(font)
        self.roleCbb.setObjectName("roleCbb")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.ItemRole.FieldRole, self.roleCbb)
        self.okBtn = QtWidgets.QPushButton(self.centralwidget,)
        self.okBtn.setGeometry(QtCore.QRect(190, 160, 56, 17))
        self.okBtn.setObjectName("okBtn")
        self.cancelBtn = QtWidgets.QPushButton(self.centralwidget)
        self.cancelBtn.setGeometry(QtCore.QRect(270, 160, 56, 17))
        self.cancelBtn.setObjectName("cancelBtn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.loadRoleCbb()
        try:
            self.okBtn.clicked.connect(self.addAccount)

            # self.okBtn.clicked.connect(MainWindow.close)

        except:
            traceback.print_exc()

        try:
            self.cancelBtn.clicked.connect(MainWindow.close)
        except:
            traceback.print_exc()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.MainWindowCopy = MainWindow


    def close(self, MainWindow):
        try:
            print(self.checkPassword(self.password.text()))
            print(self.checkUsername((self.username.text())))
            if (self.checkPassword(self.password.text()) and self.checkUsername(self.username.text())):
                MainWindow.close()
        except:
            traceback.print_exc()
    def loadRoleCbb(self):
        sever = 'localhost'
        database = 'HTTM'
        conn = pyodbc.connect("DRIVER={SQL Server Native Client 11.0};"
                              "Server=localhost;"
                              "Database=HTTM;"
                              "Trusted_connection=yes;"
                              "MARS_Connection=yes")

        cursor = conn.cursor()
        sql = cursor.execute("SELECT ROLENAME FROM ROLE")
        for row in sql:
            self.roleCbb.addItem(str(row[0]))

    def checkUsername(self, val):
        pattern = "^[A-Za-z]\\w{4,15}$"
        rs = re.match(pattern, val)
        if rs:
            return True;
        else:
            return False

    def checkPassword(self, val):
        pattern = "^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$"
        rs = re.match(pattern, val)
        if rs:
            return True;
        else:
            return False

    def checkUnique(self, test):
        sever = 'localhost'
        database = 'HTTM'
        conn = pyodbc.connect("DRIVER={SQL Server Native Client 11.0};"
                              "Server=localhost;"
                              "Database=HTTM;"
                              "Trusted_connection=yes;"
                              "MARS_Connection=yes")
        cursor = conn.cursor()
        sql = cursor.execute("SELECT USERNAME FROM ACCOUNT")
        temp = sql.fetchall()
        for i in temp:
            for j in i:
                # print(j)
                temp = str(j)
                # print(temp.casefold())
                if test.strip() == temp.strip():
                    # print(test.casefold())
                    return False;
        return True

    def addAccount(self, check):
        try:
            check = False
            sever = 'localhost'
            database = 'HTTM'
            conn = pyodbc.connect("DRIVER={SQL Server Native Client 11.0};"
                                  "Server=localhost;"
                                  "Database=HTTM;"
                                  "Trusted_connection=yes;"
                                  "MARS_Connection=yes")
            username = self.username.text()
            password = self.password.text()
            role = self.roleCbb.currentText()
            cursor = conn.cursor()
            sql = cursor.execute("SELECT IDROLE FROM ROLE WHERE ROLE.ROLENAME = '" + str(role) +"'")
            idrole = sql.fetchone()
            idemp = self.get_id()
            if self.checkUsername(username) == False:
                master = Tk()
                master.withdraw()
                messagebox.showinfo('Lỗi', 'Tên tài khoản bao gồm chữ và số. Ít nhất có 5 kí tự, không quá 15 kí tự. Bắt đầu bằng chữ cái')
                return check;
            elif self.checkUnique(username) == False:
                master = Tk()
                master.withdraw()
                messagebox.showinfo('Lỗi','Tên tài khoản bị trùng.')
                return check;
            elif self.checkPassword(password) == False:
                master = Tk()
                master.withdraw()
                messagebox.showinfo('Lỗi', 'Mật khẩu tối thiểu 8 kí tự, ít nhất một chữ cái và một số.')
                return check;
            else:
                cursor1 = conn.cursor()
                cursor1.execute("UPDATE EMPLOYEE SET USERNAME = '" + username + "' WHERE EMPLOYEE.IDEMP = '" + idemp + "'")
                cursor1.commit()
                cursor2 = conn.cursor()
                cursor2.execute("INSERT INTO ACCOUNT(USERNAME, PASSWORD, ENABLE, IDEMP, IDROLE) VALUES(?, ?, ?, ?, ?)", (username, password, 1, int(idemp), idrole[0]))
                cursor2.commit()
                print('hihi')
                check = True
                self.MainWindowCopy.close()
                return check;
        except:
            traceback.format_exc()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600;\">TÀI KHOẢN</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "Tài khoản:"))
        self.label_3.setText(_translate("MainWindow", "Mật khẩu:"))
        self.label_4.setText(_translate("MainWindow", "Quyền:"))
        self.okBtn.setText(_translate("MainWindow", "OK"))
        self.cancelBtn.setText(_translate("MainWindow", "Cancel"))


