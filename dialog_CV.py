# Form implementation generated from reading ui file 'dialog_CV.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import pickle
import traceback

import pyodbc

from PyQt6 import QtCore, QtGui, QtWidgets
import pandas as pd
import sklearn

class Ui_Dialog(object):

    CV = [[]]
    id = ""

    def init(self, id=''):
        self.id = id

    def set_id(self, id):
        self.id = id;

    def get_id(self):
        return self.id;
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(0, 10, 401, 20))
        self.label.setObjectName("label")
        self.formLayoutWidget = QtWidgets.QWidget(Dialog)
        self.formLayoutWidget.setGeometry(QtCore.QRect(14, 40, 371, 201))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.label_7 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_7.setObjectName("label_7")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_7)
        self.idCV = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.idCV.setFont(font)
        self.idCV.setObjectName("idCV")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.idCV)
        self.label_2 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_2)
        self.FLCbb = QtWidgets.QComboBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.FLCbb.setFont(font)
        self.FLCbb.setObjectName("FLCbb")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.FLCbb)
        self.label_3 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_3)
        self.TSCbb = QtWidgets.QComboBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.TSCbb.setFont(font)
        self.TSCbb.setObjectName("TSCbb")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.ItemRole.FieldRole, self.TSCbb)
        self.label_4 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_4)
        self.ExpCbb = QtWidgets.QComboBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ExpCbb.setFont(font)
        self.ExpCbb.setObjectName("ExpCbb")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.ItemRole.FieldRole, self.ExpCbb)
        self.label_5 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_5.setObjectName("label_5")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_5)
        self.ELCbb = QtWidgets.QComboBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ELCbb.setFont(font)
        self.ELCbb.setObjectName("ELCbb")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.ItemRole.FieldRole, self.ELCbb)
        self.label_6 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_6.setObjectName("label_6")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_6)
        self.CSCbb = QtWidgets.QComboBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.CSCbb.setFont(font)
        self.CSCbb.setObjectName("CSCbb")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.ItemRole.FieldRole, self.CSCbb)
        self.okBtn = QtWidgets.QPushButton(Dialog)
        self.okBtn.setGeometry(QtCore.QRect(240, 260, 56, 17))
        self.okBtn.setObjectName("okBtn")
        self.cancelBtn = QtWidgets.QPushButton(Dialog)
        self.cancelBtn.setGeometry(QtCore.QRect(310, 260, 56, 17))
        self.cancelBtn.setObjectName("cancelBtn")
        self.loadForeignLanguages()
        self.loadTeamworkSkills()
        self.loadEducationLevels()
        self.loadExp()
        self.loadCommunicationSkills()
        try:
            self.cancelBtn.clicked.connect(Dialog.close)
            self.okBtn.clicked.connect(self.okBtnClicked)
            self.okBtn.clicked.connect(Dialog.close)
            # self.cancelBtn.clicked.connect(self.openEmployee)
        except:
            traceback.print_exc()
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def loadID(self):
        try:
            self.idCV.setText(self.get_id())
        except:
            traceback.print_exc()

    def loadForeignLanguages(self):
        try:
            fl = ["Beginner", "Elementary", "Intermediate", "Upper-Intermediate", "Advanced"]
            for i in fl:
                self.FLCbb.addItem(i)
        except:
            traceback.print_exc()

    def loadTeamworkSkills(self):
        try:
            ts = ["Kem", "Kha", "Tot"]
            for i in ts:
                self.TSCbb.addItem(i)
        except:
            traceback.print_exc()

    def loadExp(self):
        try:
            exp = ["Fresher", "Junior", "Senior", "Manager"]
            for i in exp:
                self.ExpCbb.addItem(i)
        except:
            traceback.print_exc()

    def loadEducationLevels(self):
        try:
            el = ["THPT", "Trung cap nghe", "Cao dang", "Dai hoc", "Cao hoc"]
            for i in el:
                self.ELCbb.addItem(i)
        except:
            traceback.print_exc()

    def loadCommunicationSkills(self):
        try:
            cs = ["Kem", "Kha", "Tot"]
            for i in cs:
                self.CSCbb.addItem(i)
        except:
            traceback.print_exc()

    def okBtnClicked(self):
        try:

            sever = 'localhost'
            database = 'HTTM'
            conn = pyodbc.connect("DRIVER={SQL Server Native Client 11.0};"
                                  "Server=localhost;"
                                  "Database=HTTM;"
                                  "Trusted_connection=yes;"
                                  "MARS_Connection=yes")
            fl = str(self.FLCbb.currentText())
            ts = str(self.TSCbb.currentText())
            exp = str(self.ExpCbb.currentText())
            el = str(self.ELCbb.currentText())
            cs = str(self.CSCbb.currentText())
            print(type(el))
            print(self.CV)
            self.CV[0].append(el)
            self.CV[0].append(fl)
            self.CV[0].append(ts)
            self.CV[0].append(cs)
            self.CV[0].append(exp)
            print(self.CV)
            self.useTree()
            cursor = conn.cursor()
            sql = cursor.execute("INSERT INTO CV(FOREIGNLANGUAGES, TEAMWORKSKILLS, EXPERIENCE, EDUCATIONLEVEL, COMMUNICATIONSKILLS, IDEMP) VALUES(?, ?, ?, ?, ?, ?)", (fl, ts, exp, el, cs, self.id))
            cursor.commit()
            cursor2=conn.cursor()
            sql= cursor2.execute("SELECT IDCV FROM CV WHERE IDEMP=?",self.id)
            idcv=sql.fetchone()[0]
            cursor3=conn.cursor()
            cursor3.execute("UPDATE EMPLOYEE SET IDVC=? WHERE IDEMP=?", idcv, self.id)
            cursor3.commit()
            self.CV[0].clear()
            self.CV=[[]]
        except:
            traceback.print_exc()

    def openEmployee(self):
        try:
            import Employee
            self.windowProject = QtWidgets.QMainWindow()
            self.ui = Employee.Ui_admin()
            self.ui.setupUi(self.windowProject)
            self.windowProject.show()
        except:
            traceback.print_exc()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; font-weight:700;\">CV</span></p></body></html>"))
        self.label_7.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:12pt;\">ID CV:</span></p></body></html>"))
        self.label_2.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:12pt;\">Trình độ ngoại ngữ:</span></p></body></html>"))
        self.label_3.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:12pt;\">Kĩ năng làm việc nhóm:</span></p></body></html>"))
        self.label_4.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:12pt;\">Kinh nghiệm:</span></p></body></html>"))
        self.label_5.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:12pt;\">Trình độ học vấn:</span></p></body></html>"))
        self.label_6.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:12pt;\">Kĩ năng giao tiếp:</span></p></body></html>"))
        self.okBtn.setText(_translate("Dialog", "OK"))
        self.cancelBtn.setText(_translate("Dialog", "Cancel"))
    def closeEvent(self, event):
        self.window_closed.emit()
        event.accept()


    def useTree(self):
        load_model=pickle.load(open("tree.h5","rb"))
        df = pd.DataFrame(self.CV,columns=['Hoc van', 'TD Tieng Anh','Lam viec nhom','KN Giao Tiep','Experience'])
        df['Hoc van'].replace(['THPT', 'TC nghe', 'Cao dang', 'Dai hoc', 'Cao hoc'], [1, 2, 3, 4, 5], inplace=True)
        df['TD Tieng Anh'].replace(['Beginner', 'Elementary', 'Intermediate', 'Upper-Intermediate', 'Advanced'],
                                   [1, 2, 3, 4, 5], inplace=True)
        df['Lam viec nhom'].replace(['Kem', 'Kha', 'Tot'], [1, 2, 3], inplace=True)
        df['KN Giao Tiep'].replace(['Kem', 'Kha', 'Tot'], [1, 2, 3], inplace=True)
        df['Experience'].replace(['Fresher', 'Junior', 'Senior', 'Manager'], [1, 2, 3, 4], inplace=True)
        print(df)
        result=load_model.predict(df)
        RATING=''

        if(result==1):
            RATING='Kem'
        if(result==2):
            RATING='Kha'
        if(result==3):
            RATING='Tot'
        print(RATING)
        print(result)
        sever = 'localhost'
        database = 'HTTM'
        conn = pyodbc.connect("DRIVER={SQL Server Native Client 11.0};"
                              "Server=localhost;"
                              "Database=HTTM;"
                              "Trusted_connection=yes;"
                              "MARS_Connection=yes")
        cursor=conn.cursor()
        try:
            cursor.execute("UPDATE EMPLOYEE SET AVGRATING=? WHERE IDEMP=?",RATING ,self.id)
            cursor.commit()
        except:
            traceback.print_exc()




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
